import io
import threadpoolctl
from _typeshed import Incomplete

__all__ = ["mminfo", "mmread", "mmwrite"]

class _FMMThreadPoolCtlController(threadpoolctl.LibController):
    user_api: str
    internal_api: str
    filename_prefixes: Incomplete
    def get_num_threads(self): ...
    def set_num_threads(self, num_threads) -> None: ...
    def get_version(self): ...
    def set_additional_attributes(self) -> None: ...

class _TextToBytesWrapper(io.BufferedReader):
    encoding: Incomplete
    errors: Incomplete
    def __init__(
        self,
        text_io_buffer,
        encoding: Incomplete | None = None,
        errors: Incomplete | None = None,
        **kwargs,
    ) -> None: ...
    def __del__(self) -> None: ...
    def read(self, size: int = -1): ...
    def read1(self, size: int = -1): ...
    def peek(self, size: int = -1): ...
    def seek(self, offset, whence: int = 0) -> None: ...

def mmread(source): ...
def mmwrite(
    target,
    a,
    comment: Incomplete | None = None,
    field: Incomplete | None = None,
    precision: Incomplete | None = None,
    symmetry: str = "AUTO",
) -> None: ...
def mminfo(source): ...
